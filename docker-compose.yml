version: '3'

networks:
  kafka-net:
    driver: bridge

services:
  zookeeper:
    image: bitnami/zookeeper:3.9.1
    tmpfs: "/zktmp"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka1:
    image: bitnami/kafka:3.7.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CFG_NUM_PARTITIONS: 1
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms512m"
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - kafka_data1:/bitnami/kafka
    networks:
      - kafka-net

  # Script para crear topics con nombres especÃ­ficos
  kafka-setup:
    image: bitnami/kafka:3.7.0
    depends_on:
      - kafka1
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...'
        sleep 30
        # Crear primer topic
        kafka-topics.sh --create --if-not-exists \
          --bootstrap-server kafka1:9092 \
          --topic orders \
          --partitions 1 \
          --replication-factor 1
        # Crear segundo topic
        kafka-topics.sh --create --if-not-exists \
          --bootstrap-server kafka1:9092 \
          --topic orders2 \
          --partitions 1 \
          --replication-factor 1
        echo 'Topics created successfully'
      "
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka1
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - kafka-net

volumes:
  kafka_data1:
    driver: local
  zookeeper_data:
    driver: local
